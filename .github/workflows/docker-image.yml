name: Build Docker images

on:
  push:
    branches: ['main']

jobs:
  build-and-push-dockerfile-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check for pending migrations
        id: check_migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          STATUS=$(pnpm prisma migrate status --schema=prisma/schema.prisma --json)
          HAS_PENDING=$(echo "$STATUS" | jq '.hasPendingMigrations')
          if [ "$HAS_PENDING" = "true" ]; then
            echo "has_pending_migrations=true" >> $GITHUB_OUTPUT
          else
            echo "has_pending_migrations=false" >> $GITHUB_OUTPUT
          fi

      # - name: Delete database
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #   run: pnpm prisma migrate reset --force

      - name: Run migrations
        if: steps.check_migrations.outputs.has_pending_migrations == 'true'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: pnpm prisma migrate deploy

      - name: Generate Prisma client
        run: pnpm prisma generate

      - name: Seed database
        if: steps.check_migrations.outputs.has_pending_migrations == 'true'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: pnpm prisma db seed

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          platforms: linux/amd64
          build-args: |
            NEXT_PUBLIC_API_BASE_URL=${{ secrets.API_BASE_URL }}
            NEXT_PUBLIC_API_IBGE_UF=${{ secrets.API_IBGE_UF }}
            NEXT_PUBLIC_PIX_KEY=${{ secrets.PIX_KEY }}
